/* global gapi */
import { Button } from '@mui/material';
import Head from 'next/head';
import Script from 'next/script';
import { CLIENT_ID } from './google';

function SignIn (props) {
  
  let tokenClient
  let access_token

  function gapiStart() {
      gapi.client.init({
    }).then(function(response) {
      console.log('discovery document loaded');
    }, function(reason) {
      console.log('Error: ' + reason.result.error.message);
    });
  }

  function gapiLoad() {
    gapi.load('client', gapiStart)
  }
  function gisInit() {
     tokenClient = google.accounts.oauth2.initTokenClient({
      client_id: CLIENT_ID,
      scope: 'https://www.googleapis.com/auth/devstorage.full_control',
      callback: (tokenResponse) => {
        access_token = tokenResponse.access_token;
        props.setAccessToken(access_token)
        console.log(access_token)
      }
    })
    
    props.setTokenClient(tokenClient)
    
  }
  
  function getToken() {
    
    props.tokenClient.requestAccessToken();
  }

  // function handleAuthClick () {
  //   props.googleauth.signIn()
  // }
  
  return (<>
        <Head>
          <meta name="description" content="Generated by create next app" />
        </Head>
        
        <Script src="https://accounts.google.com/gsi/client" onLoad={gisInit} async defer></Script>
        <Script src="https://apis.google.com/js/api.js" onLoad={gapiLoad} async defer></Script>
        <Button id="sign-in-or-out-button" variant="contained" color="primary" onClick={() => getToken()}>Conectar</Button>
        </>
  )
}

export default SignIn
